{"version":3,"sources":["components/card/card-c.jsx","components/card-component/card-list-c.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAY,YAAjB,SACFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAEvB,aADA,CACC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIC,KAAK,SACLF,YAAaA,EACbX,UAAU,SACVc,SAAUF,MCwCHG,E,kDAxCb,aAAc,IAAD,8BACX,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IAJN,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAQ3C,WAAS,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAnCVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eca8aa0b.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card-style.css\";\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport \"./card_list_style.css\";\r\nimport { Card } from '../card/card-c';\r\n\r\nexport const CardList = props => {\r\n    return <div className = 'card-list'>\r\n        {props.monsters.map(monster => (\r\n            // inside card is props.children\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n};","import React from 'react';\r\nimport './search-box-style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        type='search' \r\n        placeholder={placeholder} \r\n        className='search'\r\n        onChange={handleChange}\r\n    />\r\n);","// all imports\nimport './App.css';\nimport React, {Component} from 'react'; //disconstructing sth like that without that e must use React.Component in export\nimport { CardList } from './components/card-component/card-list-c';\nimport { SearchBox } from './components/search-box/search-box';\n\n// component - pozala nam użyać component life cycles\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n        monsters: [],\n        searchField: ''\n    };\n  }\n\n  //when add elements do dom it's run\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())//promise\n    // .then(users => console.log(users))\n    .then(users => this.setState({ monsters: users }));\n    \n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value});\n  }\n\n  render(){\n    const { monsters, searchField } = this.state; //const monsters = this.state.monsters\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* render app in root in html */}\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}